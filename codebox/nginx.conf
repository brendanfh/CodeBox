worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

env APP_SECRET;
env REQ_SECRET;
env POSTGRES_DB;
env POSTGRES_USER;
env POSTGRES_PASSWORD;

http {
  include mime.types;

  server {
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};
	client_max_body_size 0;
	client_body_buffer_size 200000k;

    location / {
	  set $_url "http://192.168.0.4:8080";

      default_type text/html;
      content_by_lua '
        require("lapis").serve("app")
      ';
    }

    location /static/ {
      alias static/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }

	location /proxy {
		internal;
		rewrite_by_lua "
		  local req = ngx.req

		  for k,v in pairs(req.get_headers()) do
			if k ~= 'content-length' then
			  req.clear_header(k)
			end
		  end

		  if ngx.ctx.headers then
			for k,v in pairs(ngx.ctx.headers) do
			  req.set_header(k, v)
			end
		  end
		";

		proxy_http_version 1.1;
		proxy_pass $_url;
	}

	location ~* \.io {
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_http_version 1.1;

		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $host;
		proxy_pass http://192.168.0.5:5000;
		proxy_redirect off;
	}
  }
}
