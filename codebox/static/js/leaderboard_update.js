// Generated by CoffeeScript 2.4.1
(function() {
  var $progress_meter, $time_left, duration, end_time, start_time, updateLeaderboard, updateTime;

  start_time = 0;

  end_time = 0;

  $time_left = null;

  $progress_meter = null;

  duration = 0;

  updateLeaderboard = function() {
    return $.get('/leaderboard/update', {}, function(html, _, data) {
      return $('#leaderboard-container').html(html);
    });
  };

  updateTime = function() {
    var curr_time, hours, minutes, msg, percent, seconds, time_elapsed, time_left;
    curr_time = Date.now();
    time_elapsed = curr_time - start_time;
    percent = time_elapsed / duration;
    $progress_meter.css('width', `${percent * 100}%`);
    time_left = end_time - curr_time;
    hours = Math.floor(time_left / (1000 * 60 * 60));
    minutes = Math.floor(time_left / (1000 * 60)) - hours * 60;
    seconds = Math.floor(time_left / 1000) - hours * 60 * 60 - minutes * 60;
    msg = "";
    if (hours > 0) {
      msg += `${hours} hours, `;
    }
    if (minutes > 0 || hours > 0) {
      msg += `${minutes} minutes, `;
    }
    msg += `${seconds} seconds left`;
    $time_left.html(msg);
    return setTimeout(updateTime, 1000);
  };

  $(document).ready(function() {
    var comp_info, socket;
    socket = io();
    socket.emit("request-leaderboard-updates");
    $time_left = $('#time-left');
    $progress_meter = $('#progress-meter');
    comp_info = $('#comp-info');
    start_time = (comp_info.attr('data-start')) * 1000;
    end_time = (comp_info.attr('data-end')) * 1000;
    duration = end_time - start_time;
    setTimeout(updateTime, 0);
    return socket.on('update', function() {
      return updateLeaderboard();
    });
  });

}).call(this);

//# sourceMappingURL=leaderboard_update.js.map
